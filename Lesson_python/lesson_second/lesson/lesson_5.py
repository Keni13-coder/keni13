"a,b,c = ('1','2','3')- распоковка также используется символ * "
# z = (i for i in range(10)) * так же распаковывается генераторы
# a,b,c,*d,e = {10,9,8,1,6,3} -  сет хранит всебе хеши, из за этого при распаковки он сортирует по возрастанию 1 3 6 [8, 9] 10

# z = (i for i in range(10)) - генератор можно пользоваться 1 раз полсе он удаляеться *z [0,1,2,3,4,5,6,7,8,9], 2 раз []
# d = range(10) - генератор
'iter() - создаёт типовонный итератор в памяти : list_iterator object, set_iterator object'
'next()-при каждомвызове выводит 1 элемент итератора, последовательный вызов итерирует значение'
'yeld - возврощает генераторное выражение, запоминает предыдущие значение yeld'
class carsDistributor():
    # бесконечный генератор
    stock = True
    def turnon(self):
        while self.stock:
            yield "Автомобиль"
            
ddd = carsDistributor()
tu = ddd.turnon() 
print(next(tu))           


